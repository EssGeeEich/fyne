// Code generated by go run gen.go; DO NOT EDIT.
//go:build js
// +build js

package async

import (
	"fyne.io/fyne/v2/internal/driver/common/copy"
)

// CopyCanvasObjectQueue implements lock-free FIFO freelist based queue.
//
// Reference: https://dl.acm.org/citation.cfm?doid=248052.248106
type CopyCanvasObjectQueue struct {
	head *itemCopyCanvasObject
	tail *itemCopyCanvasObject
	len  uint64
}

// NewCopyCanvasObjectQueue returns a queue for caching values.
func NewCopyCanvasObjectQueue() *CopyCanvasObjectQueue {
	head := &itemCopyCanvasObject{next: nil, v: nil}
	return &CopyCanvasObjectQueue{
		tail: head,
		head: head,
	}
}

type itemCopyCanvasObject struct {
	next *itemCopyCanvasObject
	v    copy.CopyCanvasObject
}

func loadCopyCanvasObjectItem(p **itemCopyCanvasObject) *itemCopyCanvasObject {
	return *p
}

func casCopyCanvasObjectItem(p **itemCopyCanvasObject, _, new *itemCopyCanvasObject) bool {
	*p = new
	return true
}
